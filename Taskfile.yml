# The MIT License (MIT).
#
# Copyright (c) 2023-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.
---
version: 3

tasks:

  compose-setup:
    cmds:
      - docker compose build

  compose-run:
    cmds:
      - docker compose up -d

  compose-stop:
    cmds:
      - docker compose down

  compose-bash:
    cmds:
      - docker compose run app bash

  compose-tests:
    cmds:
      - docker compose run app task tests

  compose-lint:
    cmds:
      - docker compose run app task lint

  tests:
    deps: [syntax-check,type-check]
    cmds:
      - poetry run pytest src -m 'not integration' -vv

  test:
    deps: [syntax-check,type-check]
    cmds:
      - poetry run pytest {{.CLI_ARGS}}

  shell:
    cmds:
      - poetry run python src/manage.py shell_plus

  migrate:
    cmds:
      - poetry run python src/manage.py makemigrations
      - poetry run python src/manage.py migrate

  fmt:
    cmds:
      - poetry run ruff check src --fix --fix-only

  lint:
    cmds:
      - poetry run ruff check src --output-format=concise
      - poetry run flake8 src
      - poetry run mypy src

  syntax-check:
    cmds:
      - poetry run ruff check src --select=F --ignore=F401,F841

  type-check:
    cmds:
      - poetry run mypy src

  clean:
    cmds:
      - git clean -f -d -x -e .env -e src/revive-code-bot.private-key.pem
      - docker rmi revive-code-bot-app -f
